// Code generated by "juice impl --type Interface --config config.xml --namespace main.UserRepository --output interface_impl.go"; DO NOT EDIT.

package testcase

import (
	"context"
	"database/sql"
	"github.com/eatmoreapple/juice"
	"os/user"
)

type InterfaceImpl struct{}

// GetUserByID 根据用户id查找用户
func (i InterfaceImpl) GetUserByID(ctx context.Context, id int64) ([]*user.User, error) {
	manager := juice.ManagerFromContext(ctx)
	executor := juice.NewGenericManager[[]*user.User](manager).Object("main.UserRepository.GetUserByID")
	return executor.QueryContext(ctx, id)
}

// CreateUser 创建用户
func (i InterfaceImpl) CreateUser(ctx context.Context, u map[string]*user.User) error {
	manager := juice.ManagerFromContext(ctx)
	executor := manager.Object("main.UserRepository.CreateUser")
	_, err := executor.ExecContext(ctx, u)
	return err
}

// DeleteUserByID 根据id删除用户
func (i InterfaceImpl) DeleteUserByID(ctx context.Context, id int64) (sql.Result, error) {
	manager := juice.ManagerFromContext(ctx)
	executor := manager.Object("main.UserRepository.DeleteUserByID")
	return executor.ExecContext(ctx, id)
}

// NewInterface returns a new Interface.
func NewInterface() Interface {
	return &InterfaceImpl{}
}
